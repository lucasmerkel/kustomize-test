const cds = require ('../lib')
class MTXServices extends cds.Service { async init(){
  if (cds.mtx) return cds.mtx?.in (cds.app) // old mtx
  // else...
  let sources = []
  if (cds.requires.multitenancy) {
    if (!('cds.xt.DeploymentService' in cds.requires)) {
      sources.push('@sap/cds-mtxs/srv/deployment-service')
      if (!('cds.xt.SaasProvisioningService' in cds.requires)) sources.push('@sap/cds-mtxs/srv/cf/saas-provisioning-service')
    }
  }
  if (cds.requires.extensibility) {
    if (!('cds.xt.ExtensibilityService' in cds.requires)) sources.push('@sap/cds/srv/extensibility-service')
  }
  if (cds.requires.toggles) {
    if (!('cds.xt.ModelProviderService' in cds.requires)) sources.push('@sap/cds/srv/model-provider')
  }
  let models = cds.resolve(sources); if (!models) return
  let base = cds.model.$sources; models = models.filter(m => !base.includes(m))
  if (models.length) return cds.serve(models).in(cds.app)
}}
module.exports = MTXServices
